@*@page "/authentication"
@using System.DirectoryServices.AccountManagement
@using System.Security.Claims
@inject HttpClient Http
@inject NavigationManager NavigationManager


<h1>Log In</h1>


<form>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" @bind="username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="password" />
    </div>
    <button type="submit" class="btn btn-primary" @onclick="Login">Login</button>
</form>



@code {
    private string username;
    private string password;
    private string? errorMessage;

    private async Task Login()
    {
        using (var context = new PrincipalContext(ContextType.Domain))
        {
            bool isAuthenticated = context.ValidateCredentials(username, password);

            if (isAuthenticated)
            {
                var claims = new[]
                {
                    new Claim(ClaimTypes.Name, username),
                    new Claim(ClaimTypes.Role, "Administrator")
    };

                var identity = new ClaimsIdentity(claims, "Active Directory authentication");
                var user = new ClaimsPrincipal(identity);

                var requestData = new Dictionary<string, string>
                {
                    {"username", username},
                    { "password", password }
                };

                var requestContent = new FormUrlEncodedContent(requestData);
                var response = await Http.PostAsync("/api/Active", requestContent);
                NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = "Invalid username or password";
            }
        }
    }

}

*@