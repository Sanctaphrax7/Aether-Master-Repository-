@page "/viewbudget"
@using System.Net.Http.Headers
@inject IViewBudgetService ViewBudgetService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthStateProvider AuthProvider
@attribute [Authorize]


<PageTitle>View Budget</PageTitle>

<h3>Uploaded Budget</h3>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Division</th>
            <th scope="col">GlAccountNo</th>
            <th scope="col">GlDeptNo</th>
            <th scope="col">SubAccountNo</th>
            <th scope="col">PerAmt</th>
            <th scope="col">CompanyNo</th>
            <th scope="col">Fiscal Year</th>
            <th scope="col">Fiscal Month</th>
            <th scope="col">CalMonth</th>
            <th scope="col">RevisionNo</th>
            <th scope="col">LastUpdated</th>
            <th scope="col">UpdatedBy</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var budget in ViewBudgetService.Budgets)
        {
           <tr>  
                <td>@budget.Division </td>
                <td>@budget.GlAccountNo </td>
                <td>@budget.GlDeptNo </td>
                <td>@budget.SubAccountNo </td>
                <td>@budget.PerAmt </td>
                <td>@budget.CompanyNo </td>
                <td>@budget.FiscalYear </td>
                <td>@budget.FiscalMonth </td>
                <td>@budget.CalMonth </td>
                <td>@budget.RevisionNo </td>
                <td>@budget.LastUpdated </td>
                <td>@budget.UpdatedBy </td>
                <td>
                    <AuthorizeView Roles = "Admin">
                        <button class="btn btn-primary" @onclick="(() => ShowBudget(budget.Id))"><i class="oi oi-pencil"></i></button>
                    </AuthorizeView>
                </td>
           </tr>
          
        }
    </tbody>
</table>
<button class="btn btn-primary mb-4" @onclick ="CreateBudget">Create New Budget</button>

@code{

    private async Task GetAuthState()
    {
        
        var token = await AuthProvider.GetToken();
        if(!string.IsNullOrWhiteSpace(token))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetAuthState();
        await ViewBudgetService.GetBudget();
    }

    async Task ShowBudget(int id)
    {
        await GetAuthState();
        NavigationManager.NavigateTo($"edit/{id}");
    }
    async Task CreateBudget()
    {
        await GetAuthState();
        NavigationManager.NavigateTo("/edit");
    }


}
