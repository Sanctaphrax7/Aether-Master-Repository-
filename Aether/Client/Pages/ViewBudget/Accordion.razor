@page "/accordion"
@using System.Net.Http.Headers
@using Aether.Client.Services.ViewBudgetService
@inject IViewBudgetService ViewBudgetService
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthStateProvider AuthProvider
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous" defer></script>
 
<h3>Accordion Budget Data</h3>

@* <div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Accordion Item #1
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Accordion Item #2
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingThree">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                Accordion Item #3
            </button>
        </h2>
        <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
            </div>
        </div>
    </div>
</div> *@
 
<table class="table">
    <thead>
        <tr>
            <th scope="col">Division</th>
            <th scope="col">Gl Account No.</th>
            <th scope="col">Gl Dept No.</th>
            <th scope="col">Sub Account No.</th>
            <th scope="col">Per Amt</th>
            <th scope="col">Company No.</th>
            <th scope="col">Fiscal Year</th>
            <th scope="col">Fiscal Month</th>
            <th scope="col">CalMonth</th>
            <th scope="col">Revision No.</th>
            <th scope="col">Last Updated</th>
            <th scope="col">Updated</th>
            <th scope="col">Details</th>
            <th scope="col">Edit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var budget in ViewBudgetService.Budgets)
        {
            <tr data-toggle="collapse" data-target="@($"#demo{budget.Id}")" class="accordion-toggle" id="accordionRow">
                <td>@budget.Division </td>
                <td>@budget.GlAccountNo </td>
                <td>@budget.GlDeptNo </td>
                <td>@budget.SubAccountNo </td>
                <td>@budget.PerAmt </td>
                <td>@budget.CompanyNo </td>
                <td>@budget.FiscalYear </td>
                <td>@budget.FiscalMonth </td>
                <td>@budget.CalMonth </td>
                <td>@budget.RevisionNo </td>
                <td>@budget.LastUpdated </td>
                <td>@budget.UpdatedBy </td>
                <td>
                    <button class="btn btn-default btn-xs collapsed" type="button" data-bs-toggle="collapse" data-bs-target="@($"#demo{budget.Id}")" aria-expanded="false" aria-controls="demo">
                        <span class="oi oi-eye"></span>
                    </button>
                </td>
                <td>
                    <AuthorizeView Roles="Admin">
                        <button class="btn btn-primary" @onclick="(() => ShowBudget(budget.Id))"><i class="oi oi-pencil"></i></button>
                    </AuthorizeView>
                </td>
            </tr>

            <tr>
                <td colspan="12" class="hiddenRow">
                    <div class="accordion-body collapse collapse" id="@($"#demo{budget.Id}")" data-bs-parent="#accordionRow">
                        <p>Testing</p>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private async Task GetAuthState()
    {

        var token = await AuthProvider.GetToken();
        if (!string.IsNullOrWhiteSpace(token))
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetAuthState();
        await ViewBudgetService.GetBudget();
    }

    async Task ShowBudget(int id)
    {
        await GetAuthState();
        NavigationManager.NavigateTo($"edit/{id}");
    }
    // async Task ShowComment(int id)
    // {
    //     await GetAuthState();
    //     await ViewBudgetService.GetComment(id);
    // }
    async Task CreateBudget()
    {
        await GetAuthState();
        NavigationManager.NavigateTo("/edit");
    }

} 
